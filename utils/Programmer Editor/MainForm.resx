<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAUFBQAJCQkADw8PABAQEAAVFRUAGRkZABwcHAAhISEAJycnAC4uLgAxMTEANTU1ADk5
        OQA/Pz8AQ0NDAEVFRQBSUlIAVFRUAFlZWQBlZWUAaGhoAHZ2dgB5eXkAgYGBAIWFhQCJiYkAjo6OAJKS
        kgCZmZkAnJycAKampgCqqqoAra2tALOzswC3t7cAubm5AMLCwgDJyckAzMzMANPT0wDW1tYA2dnZAN3d
        3QDm5uYA6enpAO7u7gDx8fEA9PT0APn5+QD+/v4AqFQqANJUKgAAfioAKn4qAFR+KgB+fioAqH4qANJ+
        KgAAqCoAKqgqAFSoKgB+qCoAqKgqANKoKgAA0ioAKtIqAFTSKgB+0ioAqNIqANLSKgAAAFQAKgBUAFQA
        VAB+AFQAqABUANIAVAAAKlQAKipUAFQqVAB+KlQAqCpUANIqVAAAVFQAKlRUAFRUVAB+VFQAqFRUANJU
        VAAAflQAKn5UAFR+VAB+flQAqH5UANJ+VAAAqFQAKqhUAFSoVAB+qFQAqKhUANKoVAAA0lQAKtJUAFTS
        VAB+0lQAqNJUANLSVAAAAH4AKgB+AFQAfgB+AH4AqAB+ANIAfgAAKn4AKip+AFQqfgB+Kn4AqCp+ANIq
        fgAAVH4AKlR+AFRUfgB+VH4AqFR+ANJUfgAAfn4AKn5+AFR+fgB+fn4AqH5+ANJ+fgAAqH4AKqh+AFSo
        fgB+qH4AqKh+ANKofgAA0n4AKtJ+AFTSfgB+0n4AqNJ+ANLSfgAAAKgAKgCoAFQAqAB+AKgAqACoANIA
        qAAAKqgAKiqoAFQqqAB+KqgAqCqoANIqqAAAVKgAKlSoAFRUqAB+VKgAqFSoANJUqAAAfqgAKn6oAFR+
        qAB+fqgAqH6oANJ+qAAAqKgAKqioAFSoqAB+qKgAqKioANKoqAAA0qgAKtKoAFTSqAB+0qgAqNKoANLS
        qAAAANIAKgDSAFQA0gB+ANIAqADSANIA0gAAKtIAKirSAFQq0gB+KtIAqCrSANIq0gAAVNIAKlTSAFRU
        0gB+VNIAqFTSANJU0gAAftIAKn7SAFR+0gB+ftIAqH7SANJ+0gAAqNIAKqjSAFSo0gB+qNIAqKjSANKo
        0gAA0tIAKtLSAFTS0gB+0tIAqNLSANLS0gAAAPwAKgD8AFQA/AB+APwAqAD8ANIA/AAAKvwAKir8AFQq
        /AB+KvwAqCr8ANIq/AAAVPwAKlT8AFRU/AB+VPwAqFT8ANJU/AAAfvwAKn78AFR+/AB+fvwAqH78ANJ+
        /AAAqPwAKqj8AFSo/AB+qPwAqKj8ANKo/AAA0vwAKtL8AFTS/AB+0vwAqNL8ANLS/AAAACYAKgAmAFQA
        JgB+ACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        GAIHAAAAAAAAAAAAAAAABCIAHwIeAAAAAAAAAAAAAAAmAA8AAAAAAAAAAAAAAAAZEwAACBIAAAAAAAAA
        AAAAAAAAGQAAAAAAAAAAAAAAAAAHAAAWEgAAAAAAAAAAAAAAJwARAAAAAAAAAAAAAAAAAA8gABsSAAAA
        AAAAAAAAAAAcAAkAAAAAAAAAAAAAAAAAGAoAGxIAAAAAAAAAAAAAABYABgAAAAAAAAAAAAAAAAAWABAO
        BQAAAAAAAAAAAAAADAAAFQAAABwVEhYnAAAAAA4AAAAAAAAAAAAAAAAAAA0AAAAAAgIAAAAAAAIQGAMA
        AAAAAAAAAAAAAAAAADEIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAACAAAAAAAAACgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAAAAgAdCgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAABgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUvKxQMAAAA
        AAAAAAAAAAMHBwcHBwcCAAAAAAAAAAAFIQAAAAAiDQALJQAAAAAAAAAAAAAAAAAAAB4eGhoaHzEAAAAA
        AAAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////////////////////////////////////x/+R/8f/mf/n/9n/x//J/8f/yf/H
        /8H/w4PB/4AAAf4AAAH+AAAB/AAAAeAAAAHAAAABwAAAAcAAAAHAAAABAAAAAAAAAAHg//4D+///////
        ////////////////////////
</value>
  </data>
</root>