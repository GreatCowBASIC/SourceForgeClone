'''A demonstration program for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''This program demonstrates the Numerically Controlled Oscillator capabilities of the microcontroller.
'''This program will use the LEDs to show the different frequencies plus Portc.3 for your scope.
'''
'''TO DO
'''Need to fix system.h  to add INT OSC suppport for this chip!
'''Settings are completely different from all other PICs
'''
'''
'''@author  BillR
'''@licence	GPL
'''@version 1.00
'''@date   	02.04.2016
'''********************************************************************************

; ----- Configuration

  #chip 16F18855, 32
  #option explicit
  #Config RSTOSC_HFINTPLL,FEXTOSC_OFF

  #Config WRT_OFF, CPD_OFF, MCLRE_ON
  #Config CLKOUTEN = ON

  ; ----- Set the oscillator. This is a temporary workaround

  'Since we are using 2 x PLL to get to 32 MHz
  'We must set bits in OSCFREQ Register for 16 Mhz
  'This way HFINTOSC = 16 and FOSC = 32
  OSCFRQ = 5 ' (2xPLL * 16)
  OSCTUNE = b'00111011'  ;fine tune

  ; ----- Handle PPS
  UnLockPPS
    RC3PPS = 0x0019   'Numerically Controlled Oscillator on RC3
    RA0PPS = 0x0019;   'RA0->PWM6:PWM6OUT;
    RA1PPS = 0x0019;   'RA1->PWM6:PWM6OUT;
    RA2PPS = 0x0019;   'RA2->PWM6:PWM6OUT;
    RA3PPS = 0x0019;   'RA3->PWM6:PWM6OUT;
  LockPPS

  ' No Constants specified in this example.

  ; ----- Define Hardware setting

  'Reference for your Scopr
  Dir PORTC.3 OUT

  #define LEDD2	PORTA.0
  #define LEDD3	PORTA.1
  #define LEDD4	PORTA.2
  #define LEDD5	PORTA.3

  Dir     LEDD2 OUT
  Dir     LEDD3 OUT
  Dir     LEDD4 OUT
  Dir     LEDD5 OUT


  ; ----- Variables
  Dim INC_VAL_U, INC_VAL_H as Byte

; ----- Main body of program commences here.

  'Configure the Numerically Controlled Oscillator capabilities
  NCO1CLK = 0       'FOSC (ChipMhz)
  SET N1EN ON       'Enable NCO
  WRITE_NCO1INC 787 'Sets initially Frequency of NCO to 12Khz


  Do

   ' Freq Out = ((Clock_SOURCE  * INCREMENT_VAL) / 1048576) /2 = 12.007KHz
   WRITE_NCO1INC 787  '12Khz
   Wait 5 sec

   WRITE_NCO1INC 1574 '24KHz
   Wait 5 S

   WRITE_NCO1INC 3148 '48Khz
   Wait 5 S

  Loop


; ----- Support methods.  Subroutines and Functions

  SUB Write_NCO1INC (IN INC_VAL AS LONG)
    NCO1INCU = INC_VAL_U
    NCO1INCH = INC_VAL_H
    NCO1INCL = INC_VAL
  END SUB



