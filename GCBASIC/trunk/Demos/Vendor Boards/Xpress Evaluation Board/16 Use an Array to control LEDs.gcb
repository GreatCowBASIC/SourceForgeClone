'''
'''******************************************************************
'''
''' This demonstration covers a very important topic of Arrays. The code uses indirect
''' addressing to implement a moving average filter. This demonstration adds a moving average
''' filter to the Analog-to-Digital code in previous demonstration. The moving average keeps a list of the
''' last ADC values (n) and averages them together. The filter needs two parts: A circular
''' queue and a function to calculate the average.
'''
''' Twisting the potentiometer changes the value read by the Analog-to-Digital converter.
''' The filtered value is then sent to the LED display.
'''
''' The user rotates the POT to see the LEDs rotate. The four LSbs of the ADC value are reflected onto the LEDs.
'''
'''
'''  PIC: 16F18855
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: Xpress Evaluation Board
'''  Date: 13.3.2016
'''



    #chip 16f18855,32
    #config RSTOSC_HFINT32

    '' -------------------LATA-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' LED:   ---------------|D5 |D4 |D3 |D1 |-
    ''-----------------------------------------
    ''
    #define LEDD2	PORTA.0
    #define LEDD3	PORTA.1
    #define LEDD4	PORTA.2
    #define LEDD5	PORTA.3
    #define Potentiometer 	PORTA.4

    Dir     LEDD2 OUT
    Dir     LEDD3 OUT
    Dir     LEDD4 OUT
    Dir     LEDD5 OUT
    DIR     Potentiometer In


    #define NUM_READINGS 8

    'Set up the variables
    dim _sum as long
    dim yloop, xloop as byte
    _sum = 0

    'Define the table
    dim queue(8)
    queue = 0, 0, 0, 0, 0, 0, 0, 0

    do
        for xloop = 1 to NUM_READINGS
            porta = average_reading ( queue() )
            queue( xloop ) = ReadAD ( AN4 )
        next
    loop


function average_reading ( in analyze_queue() ) as word

    _sum = 0
    for yloop = 1 to  NUM_READINGS
        _sum = [long]queue ( yloop ) + _sum
    next

    average_reading = _sum / NUM_READINGS

end function

