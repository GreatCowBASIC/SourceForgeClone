'''
'''  This demonstration produces a variable speed rotating LED display that is proportional to the ADC value.
'''  The ADC value and LED rotate speed are inversely proportional to each other.
'''
'''  Rotate the POT counterclockwise to see the LEDs shift faster, press the switch to reverse the direction of the LEDs.
'''  The switch event is detected using an Interrupt.
'''
'''  The four LSbs of the ADC are mirrored onto the LEDs. Rotate the potentiometer
'''  to change the display.
'''
'''
'''  PIC: 16F18855
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: Xpress Evaluation Board
'''  Date: 1.7.2016
'''

' ----- Configuration
    #chip 16f18855
    #option explicit
    #Config FEXTOSC_OFF, RSTOSC_HFINT32
    #Config WRT_OFF, CPD_ON, MCLRE_ON

    'Required to ensure 16F18855 device is fully supported
    #script
      if NoVar(PortABCChange) then
        PortABCChange = PortBChange
      end if
    #endscript

    #define SWITCH_DOWN         0
    #define SWITCH_UP           1

    #define LED_RIGHT           TRUE
    #define LED_LEFT            FAlSE

    #define SWITCH      PORTA.5

    Dim DIRECTION as Byte
    dim mydelay, leds  as byte

    'start from the right to left
    direction = LED_RIGHT

    dir porta out
    leds = 8

    'Potentitor is connected to RA4...set as input
    dir porta.4 in

    'setup switch (SW1)
    dir SWITCH in

    porta  = 15
    Repeat 8
      porta  = !porta AND 15
      wait 125 ms
    end Repeat

    ' Set up the Interrupt. Use on
    IOCAN5 = 1
    On Interrupt PortChange call HandleISR

    do

      mydelay = ReadAD10 ( AN4 ) / 4

      ' Factor the ADC reading to delay steps
      mydelay = mydelay / 16

      ' decrement the 8 MSbs of the ADC and delay 20ms for each
      do while ( mydelay <> 0 )
            mydelay--
            wait 20 ms
      loop

      porta = leds

      if  direction = LED_RIGHT  then

          'shift to the right by 1
          Rotate leds right simple

          ' when the ROTATE moves the bit to bit 7, restart the pattern
          if leds = 128 then
             leds = 8
          end if

      else

          'Set C off to ensure the carry bit does not impact
          Set C off
          Rotate leds left

          'when the last LED is lit, restart the pattern
          if  leds = 16 then
              leds = 1
          end if
      end if
    loop


  sub HandleISR
    'Did the correct Interrupt occur?
    'We are looking for an enabled change was detected on the associated pin.
    'Set when IOCAPx = 1 and a rising edge was detected on RAx, or when IOCANx = 1 and a falling
    'edge was detected on RAx.
    if IOCAF5 = 1 then
      'Clear the Interrupt
      IOCAF5 = 0
      direction = !direction
    end if
  end sub

