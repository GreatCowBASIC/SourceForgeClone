'''
'''******************************************************************
'''
''' Pulse-Width Modulation (PWM) is a scheme that provides power to a load by switching
''' quickly between fully on and fully off states. The PWM signal resembles a square wave
''' where the high portion of the signal is considered the on state and the low portion of
''' the signal is considered the off state. The high portion, also known as the pulse width,
''' can vary in time and is defined in steps. A longer, high on time will illuminate the LED
''' brighter. The frequency or period of the PWM does not change. A larger number of
''' steps applied, which lengthens the pulse width, also supplies more power to the load.
''' Lowering the number of steps applied, which shortens the pulse width, supplies less
''' power. The PWM period is defined as the duration of one complete cycle or the total
''' amount of on and off time combined.
'''
''' This demonstation shows a how the changing PWM values across the LEDs using the PWM module.
'''
'''  PIC: 16F18855
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Board: Xpress Evaluation Board
'''  Date: 13.3.2016
'''



    #chip 16f18855,32
    #option explicit
    #Config FEXTOSC_OFF, RSTOSC_HFINT32
    #Config WRT_OFF, CPD_ON, MCLRE_ON

    'Set the PPS of the PWM and the RS232 ports.
    'Set the PPS for this solution.
  #startup InitPPS, 85

  Sub InitPPS
    UNLOCKPPS
        RC0PPS = 0x0010       'RC0->EUSART:TX;
        RXPPS  = 0x0011       'RC1->EUSART:RX;

        T4AINPPS = 0x0015;   'RC5->TMR4:T4IN;
        ADCACTPPS = 0x000C;   'RB4->ADCC:ADCACT;
        RA3PPS = 0x000E;   'RA3->PWM6:PWM6OUT;
        RA1PPS = 0x000E;   'RA1->PWM6:PWM6OUT;
        RA2PPS = 0x000E;   'RA2->PWM6:PWM6OUT;
        RA0PPS = 0x000E;   'RA0->PWM6:PWM6OUT;
      LOCKPPS
  End sub

    #define USART_BAUD_RATE 19200
    #define USART_TX_BLOCKING

    #define USE_HPWM6 TRUE
    #define USE_HPWM7 TRUE

    '' -------------------LATC-----------------
    '' Bit#:  -7---6---5---4---3---2---1---0---
    '' LED:   ---------------|DS4|DS3|DS2|DS1|-
    ''-----------------------------------------
    ''

    dir porta.0 out
    dir porta.1 out
    dir porta.2 out
    dir porta.3 out

    Dim BRIGHT as Byte

'    Do Forever
'          for bright = 0 to 255
'              wait 10 ms
              HPWM ( 6, 1000, 127 , 2  )
'        next
'        wait 10 ms
do Forever
    Loop

