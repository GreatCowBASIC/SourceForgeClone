'''
'''******************************************************************
'''
'''
'''
'''  PIC: 16F18855
'''  Compiler: GCB
'''  IDE: GCB@SYN
'''
'''  Date: 13.3.2016
'''


' ----- Configuration
    'Chip Settings.
    #chip 16f18855,32
    #option explicit
    #config RSTOSC_HFINT32


    'Generated by PIC PPS Tool for Great Cow Basic
    'PPS Tool version: 0.0.5.2
    'PinManager data: 09/02/2017
    '
    'Template comment at the start of the config file
    '
    #startup InitPPS, 85

    Sub InitPPS
        UNLOCKPPS

            'Module: EUSART
            RC0PPS = 0x0010    'TX > RC0
            TXPPS = 0x0008    'RC0 > TX (bi-directional)
            'Module: MSSP1
            SSP1DATPPS = 0x0013    'RC3 > SDA1
            RC3PPS = 0x0015    'SDA1 > RC3 (bi-directional)
            RC4PPS = 0x0014    'SCL1 > RC4
            SSP1CLKPPS = 0x0014    'RC4 > SCL1 (bi-directional)

        LOCKPPS
    End Sub
    'Template comment at the end of the config file



    #define SWITCH_DOWN         0
    #define SWITCH_UP           1

    #define SWITCH      PORTA.5

    #define USART_BAUD_RATE 19200
    #define USART_TX_BLOCKING
    #define sync SYNC_TX1STA

; ----- Define Hardware settings for hwi2c
    ' Define I2C settings - CHANGE PORTS if required for your specific device.
    #define hi2c_BAUD_RATE 400
    #define hi2c_DATA PORTC.3
    #define hi2c_CLOCK PORTC.4
    'Initialise I2C Master
    'I2C pins need to be input for SSP2 module
    Dir hi2c_DATA in
    Dir hi2c_CLOCK in

    hi2cMode Master

; ----- Main body of program commences here.
  ' Now assumes Serial Terminal is operational
  dim DeviceID as byte
  Dim DISPLAYNEWLINE as Byte

 do
    HSerPrintCRLF
    HSerPrint "Hardware I2C "
    HSerPrintCRLF 2

      ' Now assumes Serial Terminal is operational
      HSerPrintCRLF
      HSerPrint "   "
      'Create a horizontal row of numbers
      for DeviceID = 0 to 15
        HSerPrint hex(deviceID)
        HSerPrint " "
      next

      'Create a vertical column of numbers
      for DeviceID = 0 to 255
        DisplayNewLine = DeviceID % 16
        if DisplayNewLine = 0 Then
          HSerPrintCRLF
          HserPrint hex(DeviceID)
          if DisplayNewLine > 0 then
            HSerPrint " "
          end if
        end if
        HSerPrint " "

        'Do an initial Start
        HI2CStart
        if HI2CWaitMSSPTimeout <> True then

          'Send to address to device
          HI2CSend ( deviceID )

          'Did device fail to respond?
          if HI2CAckPollState = false then
            HI2CSend ( 0 )
            HI2CSend ( 0 )
            HSerPrint   hex(deviceID)
          Else
            HSerPrint "--"
          end if

          'Do a stop.
          HI2CStop
        Else
          HSerPrint "! "
        end if

      next

      HSerPrintCRLF 2
      HSerPrint   "End of Search"
      HSerPrintCRLF 2
      wait 1 s
      wait while switch = On
  loop

; ----- Support methods.  Subroutines and Functions
