'  FILE:    PIC_GCB_16F1939_LCD_LAT_Example.gcb
'  DATE:    07/08/14
'  VERSION: 0.1
'  AUTHOR:  Anobium
'
'This program was written using the Great Cow Basic IDE for use with the PIC
'16F8777A development board (HCDVBD0003) and our 1602 parallel LCD module
'(HCMODU0013 or HCMODU0038) to display some example text.
'
'You may copy, alter and reuse this code in any way you like, but please leave
'reference to HobbyComponents.com in your comments if you redistribute this code.
'This software may not be used directly for the purpose of selling products that
'directly compete with Hobby Components Ltd's own range of products.
'
'THIS SOFTWARE IS PROVIDED "AS IS". HOBBY COMPONENTS MAKES NO WARRANTIES,
'WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
'WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ACCURACY OR
'LACK OF NEGLIGENCE. HOBBY COMPONENTS SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE
'FOR ANY DAMAGES INCLUDING, BUT NOT LIMITED TO, SPECIAL, INCIDENTAL OR
'CONSEQUENTIAL DAMAGES FOR ANY REASON WHATSOEVER.




'Chip Settings. Assumes the development board with with a 16F1939 at 32mhz
#chip 16F1939,32

'Use LCD in 4 pin mode and define LCD pins
' #define LCD_IO 4
' #define LCD_RW PORTE.1
' #define LCD_RS PORTE.0
' #define LCD_Enable PORTE.2
' #define LCD_DB4 PORTD.4
' #define LCD_DB5 PORTD.5
' #define LCD_DB6 PORTD.6
' #define LCD_DB7 PORTD.7


#define LCD_IO 4
#define LCD_LAT

#define LCD_DB4 LATD.4
#define LCD_DB5 LATD.5
#define LCD_DB6 LATD.6
#define LCD_DB7 LATD.7
#define LCD_RS LATE.0
#DEFINE LCD_Enable LATE.2
#define LCD_RW LATE.1

#define _LCD_DB4 PORTD.4
#define _LCD_DB5 PORTD.5
#define _LCD_DB6 PORTD.6
#define _LCD_DB7 PORTD.7
#define _LCD_RS PORTE.0
#DEFINE _LCD_Enable PORTE.2
#define _LCD_RW PORTE.1
#define LCD_SPEED SLOW



'Main program

   'Clear the LCD
   CLS
   'Display some text on both lines
   Locate 0,0
   Print "HOBBY COMPONENTS"
   wait 1 s
   CLS
   print ChipNameStr +" @ "+str(ChipMhz) + "Mhz"
   Locate 1,0
   print "by Anobium"





'#define LCDNormalWriteByte myLCDNormalWriteByte
sub myLCDNormalWriteByte(In LCDByte)
	
' *****    This sub modified by William Roth *****

'Reduced enable pulse to 1 us
'Added conditional delay for for LCD_SLOW

	#IFNDEF LCD_NO_RW
		#IFDEF LCD_IO 4,8
			wait until LCDReady
			set LCD_RW OFF 'Write mode
		#ENDIF
	#ENDIF
	
	#IFDEF LCD_IO 2
		LCD2_NIBBLEOUT Swap4(LCDByte)  	'Swap byte; Most significant NIBBLE sent first
		LCD2_NIBBLEOUT LCDByte		'Less Significant NIBBLE output
	#ENDIF
	
	#IFDEF LCD_IO 4
		'Set pins to output
                    #IFNDEF LCD_LAT
                        DIR LCD_DB4 OUT
                        DIR LCD_DB5 OUT
                        DIR LCD_DB6 OUT
                        DIR LCD_DB7 OUT
		#ENDIF
                    #IFDEF LCD_LAT
                        DIR _LCD_DB4 OUT
                        DIR _LCD_DB5 OUT
                        DIR _LCD_DB6 OUT
                        DIR _LCD_DB7 OUT
		#ENDIF


		'Write upper nibble to output pins
		set LCD_DB4 OFF
		set LCD_DB5 OFF
		set LCD_DB6 OFF
		set LCD_DB7 OFF
		if LCDByte.7 ON THEN SET LCD_DB7 ON
		if LCDByte.6 ON THEN SET LCD_DB6 ON
		if LCDByte.5 ON THEN SET LCD_DB5 ON
		if LCDByte.4 ON THEN SET LCD_DB4 ON		
		
                  '************************************
                    #IFDEF LCD_SLOW
                       pulseout LCD_enable, 2 us
                        Wait 1 us
                    #ENDIF

                    #IFNDEF LCD_SLOW
                       pulseout LCD_enable, 1 us
                       wait 1 us
                    #ENDIF
                  '*************************************

		'Write lower nibble to output pins
		set LCD_DB4 OFF
		set LCD_DB5 OFF
		set LCD_DB6 OFF
		set LCD_DB7 OFF
		if LCDByte.3 ON THEN SET LCD_DB7 ON
		if LCDByte.2 ON THEN SET LCD_DB6 ON
		if LCDByte.1 ON THEN SET LCD_DB5 ON
		if LCDByte.0 ON THEN SET LCD_DB4 ON		

		
                    'Pulse enable pin
                 '*********************************
                    #IFDEF LCD_SLOW
                       pulseout LCD_enable, 2 us
                       wait 1 us
                  #ENDIF

                    #IFNDEF LCD_SLOW
                       pulseout LCD_enable, 1 us
                       wait 1 us
                    #ENDIF
                 '***********************************

                   	'Set data pins low again
		SET LCD_DB7 OFF
		SET LCD_DB6 OFF
		SET LCD_DB5 OFF
		SET LCD_DB4 OFF
              '*******************************************
                     #IFDEF LCD_SLOW   'Character rate = 10K
                        wait 65 us     'character delay time
                     #ENDIF

                     #IFNDEF LCD_SLOW  'Charcter rate = 20K
                        wait 17 us      'character delay time
                     #ENDIF
               '*********************************************
	
          #ENDIF
	
	#IFDEF LCD_IO 8
		'Set data port to output, and write a value to it
                    #IFNDEF LCD_LAT
                            DIR LCD_DATA_PORT out
		#ENDIF
                    #IFDEF LCD_LAT
                           DIR _LCD_DATA_PORT out
		#ENDIF
		LCD_DATA_PORT = LCDByte
		
               '********Added / Changed *************************	
                    #IFDEF LCD_SLOW
                        wait 2 us
                        pulseout LCD_enable, 2 us
                        Wait 2  us
		    LCD_DATA_PORT = 0
                        wait 80 us  'character rate = 10K
                    #ENDIF

                    #IFNDEF LCD_SLOW   'Fast
                       wait 1 us
                       pulseout LCD_enable, 1 us
                       Wait 1  us
		   LCD_DATA_PORT = 0
                        wait 32 us  'character rate = 20K
                     #ENDIF
                '*********************************

	#ENDIF
	
end sub