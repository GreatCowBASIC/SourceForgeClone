'   FILE:    DS1307 with LCD Demonstration.gcb
'   DATE:    28/08/14
'   VERSION: 1.1a
'   AUTHOR:  Anobium

'    Demo of a complete clock/calendar using the DS1307 RTC for a 16F877a 40 PIN Prototype board.
'    Install GCB - you are recommended to use GCB@SYN from the Great Cow Basic website.

'    This code is free software; you can redistribute it and/or
'    modify it under the terms of the GNU Lesser General Public
'    License as published by the Free Software Foundation; either
'    version 2.1 of the License, or (at your option) any later version.

'    This code is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
'    Lesser General Public License for more details.

'    If you require a copy of the GNU Lesser General Public
'    License along with this code; please write to the Free Software
'    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

'    Thomas Henry --- 5/26/2014
'    Evan R Venn/Anobium  --- 8/29/2014

'    There are two pushbuttons: Mode and Set these equate to Key1 and Key2

'    During normal operation, the Mode button will toggle
'    between 12- and 24-hours modes.

'    This has two modes US date and UK date style.
'    Change 'clocktype' to 0 for US and 1 for UK

'    To set a new date and time, press the Set button
'    which will take you consecutively to Month, Day, Year,
'    Day of the Week, Hour, Minute and Second. Within each of
'    these, press Mode to cycle through the possible values.
'    You may hold the Mode button to increment automatically,
'    or press momentarily for a single increment. Time is
'    always set in 24-hour clock format.
'
'    The DS1307 is attached as follows:
'    I2C Data line to RC3
'    I2C Clock line to RC4
'
'    The LCD is attached to the LCD Header


;----- Configuration

#chip 16F877a, 20                   ;PIC16F887a running at 20 Mhz
#option explicit

#include <DS1307.h>

;----- Constants

'Use LCD in 4 pin mode and define LCD pins
 #define LCD_IO 4                  ;4-bit mode
 #define LCD_RW PORTE.1            ;LCD R/W Select
 #define LCD_RS PORTE.0            ;LCD Register Select
 #define LCD_Enable PORTE.2        ;LCD Enable

 #define LCD_DB4 PORTD.4           ;LCD PIN DB4
 #define LCD_DB5 PORTD.5           ;LCD PIN DB5
 #define LCD_DB6 PORTD.6           ;LCD PIN DB6
 #define LCD_DB7 PORTD.7           ;LCD PIN DB7
 #define LCD_SPEED FAST

'Define ports
 dir portb.0 in
 dir portb.1 in
 dir portb.2 in
 dir portb.4 in
 ' Enable enable weak pull-up function on portB.  This IS required.
 OPTION_REG.NOT_RBPU = 0

#define clocktype   1               ;0 is US or 1 is UK style
#define debounce    5 mS            ;settling time for switches
#define delay       100 mS          ;delay time for pushbutton
#define pressed     0               ;flag for pressed pushbutton
#define setBut      portb.0         ;Set pushbutton
#define modeBut     portb.1         ;Mode pushbutton

#define I2C_CLOCK   PortC.3         ;SCL on pin 1
#define I2C_DATA    PortC.4         ;SDA on pin 2


#define I2C_MODE Master
#define I2C_DISABLE_INTERRUPTS ON
#define I2C_BIT_DELAY   20 us      'width of data bit on SDA
#define I2C_CLOCK_DELAY 10 us      'width of clock pulse on SCL
#define I2C_END_DELAY   10 us      'interval between clock pulses


;----- Variables

dim changed as bit
dim hour, min, sec, am_pm as byte
dim date, month, year, DOW as byte
dim mode, Oldmode, dayMax as byte
Dim DAYSMAX, DAYSMAX as Byte


;----- Tables

table monthDays                     ;# of days in months
  31
  29                                ;leap years only
  31
  30
  31
  30
  31
  31
  30
  31
  30
  31
end table

;----- Program

  print "DS1307 Clock"
  locate 1,0
  print "Great Cow Basic"
  wait 3 s
  CLS


  I2CStart                          ; is DS1307 present?
  I2CSend(DS_AddrWrite)
  I2CStop

  if I2CSendState = False  then     ; is DS1307 present?
     print "No DS1307"              ; user message
     locate 1,0
     print "Stopped"                ; user message
     end
  end if


  DS1307_ReadDate(DOW, date, month, year) ;get initial date
  DS1307_ReadHourMode(mode)           ;and the current mode
  DS1307_SetHourMode(mode)            ;update hour mode from RTC

  do
    updateDisp                        ;show time and date
    if setBut = pressed then
      changeSetting                   ;change time and date
    end if

    if modeBut = pressed then
      changeMode                      ;12 or 24 hour mode
    end if
  loop

  ;----- Subroutines

  sub printTime
    if mode = 24 then
      if hour < 10 then               ;left pad with zero
        print "0"
      end if
    end if
    print hour

    print ":"
    if min < 10 then                  ;left pad with zero
      print "0"
    end if
    print min

    print ":"
    if sec < 10 then                  ;left pad with zero
      print "0"
    end if
    print sec

    if mode = 12 then                 ;print a.m or p.m
      if am_pm then                   ;only in 12-hour mode
        print " p.m. "
      else
        print " a.m. "
      end if
    else
      print "     "                   ;wipe out garbage
    end if
  end sub

  ;-----

  sub printDate
    select case DOW                   ;day of the week
      case 1:
        print "Sun. "
      case 2:
        print "Mon. "
      case 3:
        print "Tue. "
      case 4:
        print "Wed. "
      case 5:
        print "Thu. "
      case 6:
        print "Fri. "
      case 7:
        print "Sat. "
    end select

    if clocktype = 0 then
      print month
      print "/"
      print date
      print "/20"                       ;make four-digit year
      if year < 10 then
        print "0"
      end if
    else
      print date
      print "/"
      print month
      print "/20"                       ;make four-digit year
      if year < 10 then
        print "0"
      end if
    end if
    print year
    print "  "                        ;blank any garbage
  end sub

  ;-----

  sub updateDisp
    ;for best efficiency, date is only updated once a day
    DS1307_ReadTime(hour, min, sec, am_pm)
    if !(hour | min | sec) then       ;time to update
      DS1307_ReadDate(DOW, date, month, year)
    end if

    locate 0,0                        ;home the cursor
    printTime                         ;show time

    locate 1,0                        ;show the date
    printDate
  end sub

  ;-----

  sub changeSetting
    changed = false                   ;assume no change will be made
    DS1307_ReadHourMode(Oldmode)      ;and the current mode
    mode = 24                         ;ensure the display is correct
    DS1307_SetHourMode(24)            ;change settings in 24-hour mode

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop

    if clocktype = 0 then             ; handle US and UK clock type
       SetMonth
       SetDate
    else
       SetDate
       SetMonth
    end if
    SetYear

    ;***** Day of the Week

    cls
    print "Set Weekday:"
    locate 1,0
    printDate

    do
      do while modeBut = pressed      ;Mode button held
        DOW++                         ;increment while pressed
        if DOW > 7 then               ;1 = Sunday, etc.
          DOW = 1
        end if

        locate 1,0                    ;print updated display
        printDate
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop

    ;***** Hour

    cls
    print "Set Hours:"
    locate 1,0
    if OldMode = 12 and am_pm then    ; make correction of AM_PM mode by adding 12 hours to handle mode changes
       hour = hour + 12
    end if

    printTime

    do
      do while modeBut = pressed      ;Mode button held
        hour++                        ;increment while pressed
        if hour > 23 then             ;remember, set in 24-hour mode
          hour = 0
        end if

        locate 1,0                    ;print updated display
        printTime
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop

    ;***** Minutes

    cls
    print "Set Minutes:"
    locate 1,0
    printTime

    do
      do while modeBut = pressed      ;Mode button held
        min++                         ;increment while pressed
        if min > 59 then              ;0 to 59 minutes
          min = 0
        end if

        locate 1,0                    ;print updated display
        printTime
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop

    ;***** Second

    cls
    print "Set Seconds:"
    locate 1,0
    printTime

    do
      do while modeBut = pressed      ;Mode button held
        sec++                         ;increment while pressed
        if sec > 59 then              ;0 to 59 seconds
          sec = 0
        end if

        locate 1,0                    ;print updated display
        printTime
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop

    ;***** Execute the new settings

    if changed then
      cls
      print "Press Set, or"
      locate 1,0
      print "Mode to revert"

      do while (setBut <> pressed)          ;wait for the Set button
        wait debounce
        if ModeBut = pressed then
           cls                               ;clear last message
           DS1307_SetHourMode(Oldmode)       ;restore current mode
           exit Sub                          ;do not set, exit set routine
        end if
      loop

      DS1307_SetHourMode(24)                 ;change settings in 24-hour mode
      DS1307_SetClock(hour, min, sec, DOW, date, month, year)
    end if

    do while (setBut = pressed)       ;wait for Set release
    loop

    wait debounce                     ;let it settle
    cls                               ;clear last message
    DS1307_SetHourMode(Oldmode)       ;restore current mode
    mode = Oldmode                    ;restore mode
  end sub

  ;-----

  sub changeMode
    DS1307_SetHourMode(24)            ;change settings in 24-hour mode

    if mode = 12 then                 ;toggle between 12 and 24
      mode = 24
    else
      mode = 12
    end if

    DS1307_SetHourMode(mode)          ;change to new mode

    do while modeBut = pressed        ;wait for a release
      wait debounce
    loop
  end sub

  sub setMonth
    ;***** Month
    cls
    print "Set Month:"
    locate 1,0
    printDate

    do
      do while modeBut = pressed      ;Mode button held
        month++                       ;increment while pressed
        if month > 12 then
          month = 1
        end if

        locate 1,0                    ;print updated display
        printDate
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
    loop while setBut <> pressed      ;Set moves you on

    readTable monthDays, month, daysMax

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop
  end Sub



  sub SetDate
    ;***** Date

    cls
    print "Set Date:"
    locate 1,0
    printDate
    readTable monthDays, month, daysMax
    do
      do while modeBut = pressed      ;Mode button held
        date++                        ;increment while pressed
        if date > daysMax then        ;stay within legal days
          date = 1
        end if

        locate 1,0                    ;print updated display
        printDate
        wait while modeBut = pressed  ;wait for repeatt
        changed = true                ;a change was made
      loop
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop
  end sub


  sub SetYear
    ;***** Year

    cls
    print "Set Year:"
    locate 1,0
    printDate

    do
      do while modeBut = pressed      ;Mode button held
        year++                        ;increment while pressed
        if year > 99 then             ;this millennium only
          year = 0
        end if

        locate 1,0                    ;print updated display
        printDate
        wait while modeBut = pressed  ;wait for repeat
        changed = true                ;a change was made
      loop
    loop while setBut <> pressed

    do while setBut = pressed         ;wait for Set release
      wait debounce
    loop


  end sub
