The following outlines how to work around the D10 shorting issue during
backlight control without modifying the hardware.

The issue is that when D10 is an output and driven HIGH there is a short.
If D10 is never driven HIGH then the backlight will be on and there is
no problem. 

That said,
care must be taken with any of these s/w only soulutions in that
they all suffer from a potential issue.
The potential issue is if some other sketch was previously loaded
on the microcontroller that set D10 HIGH or used PWM on D10.
If so, then that sketch has the potential to set D10 HIGH
before another sketch is loaded.
So if using these s/w only solutions just keep in mind
that they can't fully protect the hardware from damage and
neither can support PWM because the first thing analogWrite() does is
make the pin an output as it turns on PWM which will
be driving the pin high.


Solutions:

1) "Do nothing"
The simplest solution is to "do nothing" and just
leave the backlight on all the time.
Just keep in mind that care should be take to ensure
that previous sketches haven't set D10 high before using
the shield.
If unsure, just load the board with the blink sketch to clear
out any previous sketch before plugging in the shield.


2) "S/W Work-Around" for on/off control
If backlight control is really desired/wanted,
then there is the ability to do this with some special
s/w sequences. However, PWM dimming cannot be supported as
that requires setting D10 HIGH which cannot be done
unless the actual h/w is modified.

The s/w only method:
- set D10 to LOW (only once)
- set D10 to OUTPUT for backlight off
- set D10 to INPUT for backlight on

This reduces to:
(D10 will default to LOW on reset)
Code:

pinMode(10, OUTPUT); // turn off backlight
pinMode(10, INPUT); // turn on backlight

This works because OUTPUT sets the output of the pin to LOW as well
which will pull the transistor base down which will turn off the backlight.
Since the pullup still in place on the LCD shield, there is no need
to turn on the D10 pullup, just setting it to INPUT mode will allow the
shield pullup to drive the transistor to turn on the backlight.

And finally here are two macros that can be added to your code
to do it for you:

#define LCDbacklight() pinMode(D10, INPUT) // turn on backlight
#define LCDnoBacklight() pinMode(D10, OUTPUT) // turn off backlight

Just add (copy & past) those two lines the top of your sketch
after your includes and you can then use them in your sketch to control
the backlight
Examples of using the macros:

LCDBacklight(); // turn on the backlight
LCDnoBacklight(); // turn off the backlight

--- bill
