  '  FILE:    TestRoutine_16f1939_for_KS0108@32.gcb
  '  DATE:    08/11/14
  '  VERSION: 1.0
  '  AUTHOR:  Anobium
  '
  '  Published - works
  '
  'This program was written using the Great Cow Basic IDE for use with the PIC
  'Microchip development board and the KS0108 GLCD.
  '
  'This file supports all the GLCD device types.  Simple remove comment as appropiate and change port settings.
  '
  'You may copy, alter and reuse this code in any way you like, but please leave
  'reference to Great Cow Basic and Anobium in your comments if you redistribute this code.
  '
  'THIS SOFTWARE IS PROVIDED "AS IS". WE MAKE, OR PROVIDE, ANY WARRANTIES,
  'WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED
  'WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ACCURACY OR
  'LACK OF NEGLIGENCE. ANOBIUM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE
  'FOR ANY DAMAGES INCLUDING, BUT NOT LIMITED TO, SPECIAL, INCIDENTAL OR
  'CONSEQUENTIAL DAMAGES FOR ANY REASON WHATSOEVER.


  #chip 16f1939,32
  #config Osc = INT, VCAPEN_OFF, MCLRE_On, PLLEN_ON, CLKOUTEN_OFF

  '#define glcd_lat                      ' if required

  ;Defines (Constants ofr GLCD) - 'Required for KS0108 Support and some of the constants are required for the ST7920
         #define _GLCD_CS1 PORTa.7 ' CS1, CS2 can be reversed on some devices
         #define _GLCD_CS2 PORTa.6
         #define _GLCD_DB0 PORTD.0 'DB0 to pin 7 on LCD
         #define _GLCD_DB1 PORTD.1 'DB1 to pin 8 on LCD
         #define _GLCD_DB2 PORTD.2 'DB2 to pin 9 on LCD
         #define _GLCD_DB3 PORTD.3 'DB3 to pin 10 on LCD
         #define _GLCD_DB4 PORTD.4 'DB4 to pin 11 on LCD
         #define _GLCD_DB5 PORTD.5 'DB5 to pin 12 on LCD
         #define _GLCD_DB6 PORTD.6 'DB6 to pin 13 on LCD
         #define _GLCD_DB7 PORTD.7 'DB7 to pin 14 on LCD

         #define _GLCD_RS PORTa.0
         #define _GLCD_Enable PORTA.1
         #define _GLCD_RW PORTA.2
         #define _GLCD_RESET PORTA.3

         #define GLCD_CS1 PORTa.7'D12 to actually since CS1, CS2 can be reversed on some devices
         #define GLCD_CS2 PORTa.6
         #define GLCD_DB0 PORTD.0 'D0 to pin 7 on LCD
         #define GLCD_DB1 PORTD.1 'D1 to pin 8 on LCD
         #define GLCD_DB2 PORTD.2 'D2 to pin 9 on LCD
         #define GLCD_DB3 PORTD.3 'D3 to pin 10 on LCD
         #define GLCD_DB4 PORTD.4 'D4 to pin 11 on LCD
         #define GLCD_DB5 PORTD.5 'D5 to pin 12 on LCD
         #define GLCD_DB6 PORTD.6 'D6 to pin 13 on LCD
         #define GLCD_DB7 PORTD.7 'D7 to pin 14 on LCD

         #define GLCD_RS PORTa.0
         #define GLCD_Enable PORTA.1
         #define GLCD_RW PORTA.2
         #define GLCD_RESET PORTA.3
         ' Change timing for 32 mhz
         #define KS0108ReadDelay    3     ; = 2 normal usage, 3 is OK at 32 mhz!
         #define KS0108WriteDelay   0     ; = 1 normal usage
         #define KS0108_Clock_Delay 0     ; = 1 normal usage


  #define GLCD_TYPE GLCD_TYPE_KS0108               ' This is the Default value, not required.

  #include <glcd.h>

      CCount = 0
      dim longNumber as long
      longNumber = 0 ' max value = 4294967290
      dim wordNumber as Word
      wordNumber = 0
      byteNumber = 0

      GLCDCLS

      DO forever

          GLCDPrint (0, 0, "Print String")

          GLCDPrint ( 64 ,  36, "          ")
          GLCDPrint ( 64 ,  44, "     ")
          GLCDPrint ( 64 ,  52, "    ")


          GLCDPrint ( 64 ,  36, longNumber)
          GLCDPrint ( 64 ,  44, wordNumber)
          GLCDPrint ( 64 ,  52, byteNumber)

          GLCDDrawString( 0,8,"Drawstring Test")
          GLCDDrawChar(100, 8, ( CCount + 31 ) mod 127)

          box 0,0,127,63
          box GLCD_WIDTH-5, GLCD_HEIGHT-5,GLCD_WIDTH-1, GLCD_HEIGHT-1
          filledbox 3,43,11,51, wordNumber
          Circle( 44,41,15)
          FilledCircle( 44,41,9, longNumber xor 1)
          line 0,63,64,31
          line 64,31,0,31

          CCount++
          longNumber = longNumber + 7
          wordNumber = wordNumber + 3
          byteNumber++
      LOOP

  end



