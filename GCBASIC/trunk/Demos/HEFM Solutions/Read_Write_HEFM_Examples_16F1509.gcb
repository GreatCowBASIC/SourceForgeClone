'''A test program of the heflash.h library routines
'''-----------------------------------------------------------------------------
'''This is using the heflash function to read/write data or strings
'''to HEFM. The HEFM is then dumped on a serial terminal
'''Be sure to use one of the chip listed in heflash.h init routine which
'''have an UART module
'''
'''@author 	Jacques Nilo
'''@licence	GPL
'''@version	1.1
'''@date   	05.06.2015
'''
'''Revision log :
'''1.1 Adapted to 1.3 new heflash.h library and dat files
'''*****************************************************************************

; Chip Settings
#chip 16F1509, 8
#option explicit
#include <heflash.h>


; Config UART
#define USART_BLOCKING true
#define USART_BAUD_RATE 19200

; Define serial port addresses
#define SerInPort  PORTB.5    ' RX
#define SerOutPort PORTB.7    ' TX

wait 1 s

; This subroutine display the High Extended Flash Memory on a terminal

sub HEFM_Dump
dim MemLocation,row as word
for index = 0 to 127
  test=index%8
  test1=index%HEFLASH_ROWSIZE
  row=HEFLASH_START+index
  if test1 = 0 then
      HSerPrintCRLF
      hserprint "        0"
      hserprint "     1"
      hserprint "     2"
      hserprint "     3"
      hserprint "     4"
      hserprint "     5"
      hserprint "     6"
      hserprint "     7"
  end if
  if test = 0 then
      HSerPrintCRLF
      hserprint hex(row_h)
      hserprint hex(row)
      hserprint "  "
  end if
  MemLocation = FLASH_Read(row)
  hserprint hex(MemLocation_H)
  hserprint hex(MemLocation)
  hserprint "  "
next
HSerPrintCRLF
end sub
;
; --- Main test Program
;

Dim INDEX, TEST1, TEST, ROW_H, MEMLOCATION_H, INDEX1, NUMBYTE, TEMP as Byte

dim Hello as string
dim data(32)

HSerPrintCRLF
HSerPrint "Initial HEFM state :"
HEFM_Dump
;
; Test 1: fill block 0 and 2 with some data then dump HEFM to terminal
;
HSerPrintCRLF
HSerPrint "Test 1 :"
for index1=1 to 32
 data(index1)=index1                         'Fill Data array : 1 --> 32
next
HEFwriteBlock(0,data,HEFLASH_ROWSIZE)     'Data 1-->32 copied to row 0
for index1=1 to 32
 Data(index1)=33-index1                      'Fill Data array : 32 --> 1
next
HEFwriteBlock(2,data,20)                'Data 32-->12 copied to row 2
HEFM_Dump
;
; Test 2: read block 0 into data, move it to block 1, erase block 0 & dump
;
HSerPrintCRLF
HSerPrint "Test 2 :"
HEFreadBlock(data,0,HEFLASH_ROWSIZE)     'Row 0 loaded in data
HEFwriteBlock(1,data,HEFLASH_ROWSIZE)    'Data copied to row 1
FLASH_erase(0x1F80)                      'Row 0 erased
HEFM_Dump                                'Dump HEFM on terminal
;
; Test 3: write a string and a byte to row 2 then dump
;
HSerPrintCRLF
HSerPrint "Test 3 :"
Dim Hello as String
Hello="Hello GCB World!"
Numbyte=99
HEFwriteBlock(2,Hello,len(Hello))      'Hello string copied to row 2
HEFWrite(95,Numbyte)                   'Numbyte copied at end of block 2
HEFM_Dump
;
; Test 4: test of the read bytes routines
;
HSerPrintCRLF
HSerPrint "Test 4 :"
HSerPrintCRLF
; Test HEFRead
HEFRead(95, temp)
HSerPrint "Value in temp from HEFRead(95,temp) is "
HSerPrint temp
HSerPrintCRLF
; Test HEFreaByte
Hserprint "and should equal HEFreadByte(2,31) : "
HserPrint HEFreadByte(2,31)
HSerPrintCRLF
; Test HEFreadBlock
Hello="                "
HEFreadBlock(Hello,2,len(Hello))
HSerPrint "In Block 2 I read : "
HSerPrint Hello     '
