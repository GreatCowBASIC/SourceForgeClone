'''A program  for GCGB and GCB.
'''--------------------------------------------------------------------------------------------------------------------------------
'''    Description. Interrupt driving LED using Timer0Overflow match.
'''    This calls the Timer0Overflow every 1ms.
'''     You can use the #define SimulatePWM to either control an LED with PWM or Toggle the LED
'''    The SimulatePWM adjusts the power to the LED over 2.5 seconds, then to zero power again over 2.5 seconds with a hold of 1 second between each ramp up/down.
'''    The LED is connected to port via appropiate resistors.
''':
'''    The important thing to note. You MUST reset the timer in the InterruptHandler routine to keep the timer set correctly.
'''
'''
'''   Use the Timer Calc' application that is part of Mister E PIC Mutl-calc tookset to calculate the value.
'''   Ensure you set the Prescaler in the InitTimer0 and the Interrupt handling routine - you need to this for Overflow timers.

'''@author  EvanV
'''@licence GPL
'''@version 1.0a
'''@date    31.03.2017
' ----- Configuration
' ----- Configuration
  #chip mega328p
  #option explicit

'  #define SimulatePWM 'comment this to just toggle the LED

  'hardware
  #define LED PORTB.5
  dir LED out

  'Call the initialisation routine
  InitLEDControl

  ;----- Variables
    Dim LEDSPEED, PWMCOUNTER, PWMCOUNTER as Byte


'Main routine
  Do

      #ifdef SimulatePWM
          ;Increase LED to full over 2.5 seconds
          For LEDSpeed = 0 to 100
              Wait 25 ms
          Next
          ;Hold LEDPower
          Wait 1 s
          ;Decrease LED to zero over 2.5 seconds
          For LEDSpeed = 100 to 0 step - 1
              Wait 25 ms
          Next
          ;Hold LEDPower
          Wait 1 s
      #endif

  Loop
  end



'Setup routine
Sub InitLEDControl

    set LED off

    'Clear variables
    LEDSpeed = 0
    PWMCounter = 0

    ' Add the handler for the interrupt
    On Interrupt Timer0Overflow Call InterruptHandler
    ' Initialise the timer - this is required
    ' Set prescaler to 64 and then start the timer
    InitTimer0 Osc, PS_0_64
    ' Start the timer - this is required
    StartTimer 0
    'Set here to initialise but you need to set in the Interrupt routine handler
    ' Use the Timer Calc' application that is part of Mister E PIC Mutl-calc tookset to calculate the value.
    ' Ensure you set the Prescaler in the InitTimer0 shown above
    SetTimer 0, 6

End Sub


'PWM sub
'This will be called when the Timer overflows
Sub InterruptHandler


  ' Set the register to 6 to give us the 1ms Interrupt.
  ' Use the Timer Calc' application that is part of Mister E PIC Mutl-calc tookset to calculate the value.
  ' Ensure you set the Prescaler in the InitTimer0 shown above
  SetTimer 0, 6

  #ifdef SimulatePWM

    If LEDSpeed > PWMCounter Then
        Set LED On
    Else
        Set LED Off
    End If
    PWMCounter += 1
    If PWMCounter = 100 Then PWMCounter = 0
  #endif

  #ifndef SimulatePWM
    LED = !LED
  #endif
End Sub
