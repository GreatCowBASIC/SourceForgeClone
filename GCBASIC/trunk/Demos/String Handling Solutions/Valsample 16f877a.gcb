'''A most simple string demonstration using VAL for GCGB and GCB.
'''------------------------------------------------------------------------
'''This program shows the number value of string on the LCD
'''
'''This sample file can be adapted to any of the supported microprocessor
'''by simply changing the #chip as follows: #chip 16f877a, 4
'''
'''To make your programmer/bootloader work, click menu
''' GCBasic -> Edit AVR programmer batchfile
'''or, for the a Microchip PIC
'''
'''To make your programmer/bootloader work, click menu
''' GCBasic -> Edit PIC programmer batchfile
'''
'''Click button "view Demos" for more sample programs.
'''
'''************************************************************************

' ----- Configuration
  #chip 16f877a, 4

; ----- Define Hardware settings
  ; Required for LCD
  #define LCD_IO 4
  #define LCD_NO_RW
  #define LCD_Speed fast

  ;Change as necessary
  #define LCD_RS PortB.2
  #define LCD_Enable PortB.3
  #define LCD_DB4 PortB.4
  #define LCD_DB5 PortB.5
  #define LCD_DB6 PortB.6
  #define LCD_DB7 PortB.7

; ----- Variables
	dim bytetest as byte
	dim wordtest as word
  dim longtest as long

  bytetest = 0
  wordtest = 0
  longtest = 0


; ----- Main body of program commences here.


	CLS
  Print  "Val Functions"
  Wait 1 s
	cls



	Print "Bytes - Val()"
  Locate 1,0
  bytetest = val("255")
  Print ByteTest
  Wait 1 s
	cls

  Print "Words - Val()"
  Locate 1,0
  wordtest = val16("65535")
  Print WordTest
  wait 1 s
	cls

  Print "Longs - Val32()"
  Locate 1,0
  longtest = val32("4294967295")
  Print LongTest
  wait 1 s






  wait 100 ms
	end

; ----- Support methods.  Subroutines and Functions
