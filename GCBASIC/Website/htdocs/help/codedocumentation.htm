<html><head>
   <title>Code Documentation</title>
   <meta name="generator"  content="HelpMaker.net" >
   <meta name="keywords"  content="Troubleshooting," ></head>
<body bgcolor="FFFCEA" >
<table width="100%"  border="0"  cellspacing="0"  cellpadding="2"  bgcolor="C0C0C0" >
  <tr>
    <td align="left" >
      <div align="left" ><font face="Arial"  color="#010101"  size="4" ><span style="font-size:14pt" >Code Documentation</span></font><font color="#010101" ></font></div>

    </td>
    <td align="right" >
      <font face="Arial"  size="2" >
        <a href="rgbledcontrol.htm">Previous</a>&nbsp;&nbsp;
      </font>
    </td>
  </tr></table>
<hr><div align="left" ><br></div><font color="#010101" ><div align="left" ></font><font face="Arial" ><span style="font-size:12pt" >Documenting GCGB is key for ease of use.&nbsp; This section is intended for 
developers only.</span></font><font color="#010101" ></font></div><div align="left" ><br></div><font color="#010101" ><div align="left" ></font><font face="Arial" ><span style="font-size:12pt" >Documenting is the ability to read some extra information from comments in 
libraries.&nbsp;&nbsp; </span></font><font color="#010101" ></font></div><div align="left" ><br></div><font color="#010101" ><div align="left" ></font><font face="Arial" ><span style="font-size:12pt" >Some comments that start with ''' have a special meaning, and will be 
displayed as tooltips or as information to the user. This helps even 
inexperienced users to use extra libraries.</span></font><font color="#010101" ></font></div><div align="left" ><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:-6mm; " ><font face="Arial" ><span style="font-size:10pt" >1.&nbsp;&nbsp;&nbsp;&nbsp;</span></font><font face="Arial" ><span style="font-size:12pt" >A note on comments in general. GCGB uses ; to indicate 
comments that it has placed automatically, and ' to indicate 
ones that the user has placed. When loading a program, it will 
not load any that start with ;.&nbsp; This shouldn't matter too much, 
but just something to be aware of.</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:-6mm; " ><font face="Arial" ><span style="font-size:10pt" >2.&nbsp;&nbsp;&nbsp;&nbsp;</span></font><font face="Arial" ><span style="font-size:12pt" >As for code documentation comments, GCGB will load 
information about subroutines/functions and any hardware 
settings that need to be set.</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:-6mm; " ><font face="Arial" ><span style="font-size:10pt" >3.&nbsp;&nbsp;&nbsp;&nbsp;</span></font><font face="Arial" ><span style="font-size:12pt" >For subroutines, a line before the Sub or Function line that 
starts with ''' will be used as a tooltip when the user hovers over 
the icon. A line that starts with '''@ will be interpreted differently, 
depending on what comes after the @.&nbsp; '''@param ParamName 
Parameter Description&nbsp;&nbsp; will add a description for the parameter. 
For a subroutine, this will show in the Icon Settings panel under 
the parameter when the user has selected that icon. </span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:-6mm; " ><font face="Arial" ><span style="font-size:10pt" >4.&nbsp;&nbsp;&nbsp;&nbsp;</span></font><font face="Arial" ><span style="font-size:12pt" >For a function, it will show at the appropriate time in the 
Parameter Editor wizard. '''@return Returned value applies to 
functions only. It will be displayed in the Parameter Editor 
wizard when the user is asked to choose a function. An example 
of all this is given in srf04.h:</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:51mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >'''Read the distance to the nearest object</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:51mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >'''@param US_Sensor Sensor to read (1 to 4)</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:51mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >'''@return Distance in cm</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:51mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >Function USDistance(US_Sensor) As Word</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >5. If a subroutine or command is used internally in the library, 
but GCGB users shouldn't see it, it can be hidden by placing 
'''@hide before the Sub or Function line. Another example from 
srf04.h:</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >'''@hide</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >Sub InitUSSensor</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >These should hopefully be pretty easy to add. For anyone more 
motivated, it's also possible to add Hardware Settings. A 
particular setting can be defined anywhere in the file, using this 
syntax:</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >'''@hardware condition, display name, constant, value type</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >condition tells GCGB when to show the setting. Normally, this is 
All, but sometimes it can include a constant, a space and then a 
comma separated list of values. display name is a friendly name 
for the setting to display. constant is the constant that must be 
set, and value type is the type that will be accepted for that 
constant's value. </span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ><br></div><font color="#010101" ><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ></font><font face="Arial" ><span style="font-size:12pt" >To allow for multiple value types, enter a list of types with a | 
between them.</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >Allowed types are:</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >free - Allows anything</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >label - Allows any label</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >condition - Allows a condition</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >table - Allows a data table</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >bit - Allows any bit from variable, or bit variable</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >io_pin - Allows an IO pin</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >io_port - Allows an entire IO port</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >number - Allows any fixed number or variable</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >rangex:y - Allows any number between x and y</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >var - Allows any variable</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >var_byte - Allows any byte variable</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >var_word - Allows any word variable</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >var_integer - Allows any integer variable</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >var_string - Allows any string variable</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >const - Allows any fixed number</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >const_byte - Allows any byte sized fixed number</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >const_word - Allows any word sized fixed number</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >const_integer - Allows any integer sized fixed number</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >const_string - Allows any fixed string</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >byte - Allows any byte (fixed number or variable)</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >word - Allows any word</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >integer - Allows any integer</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >string - Allows any string</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >array - Allows any array</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:38mm; margin-right:0mm; text-indent:0mm; " ><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >6. When the library is added the program, GCGB will show a 
new device with the name of the library file on the Hardware 
Settings window. The user can then set the relevant constants 
without necessarily needing to see any code.</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >(Note: adding a GCBASIC library to GCGB won't result in any 
changes to the library. GCGB uses the information it reads to 
help edit the user's program, but then the user's program is 
passed to the compiler along with the unchanged library.)</span></font><font color="#010101" ></font></div><div align="left"  style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial" ><span style="font-size:12pt" >7. Hardware Settings are a bit more involved to add, but 
hopefully the bit of extra documentation for subroutines will be 
straight forward.</span></font><font color="#010101" ></font></div><div align="left" ><br></div><font color="#010101" ><div align="left" ></font><font color="#010101" ></font></div>

</html>
