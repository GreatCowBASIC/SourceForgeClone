<html><head>
   <title>#option NoContextSave</title>
   <meta name="generator"  content="HelpMaker.net" >
   <meta name="keywords"  content="," ></head>
<body bgcolor="FFFCEA" >
<table width="100%"  border="0"  cellspacing="0"  cellpadding="2"  bgcolor="C0C0C0" >
  <tr>
    <td align="left" >
      <div align="left" ><font face="Arial"  size="4" ><span style="font-size:14pt" >#option NoContextSave </span></font><font color="#010101" ></font></div>

    </td>
    <td align="right" >
      <font face="Arial"  size="2" >
        <a href="optionbootloader.htm">Previous</a>&nbsp;&nbsp;<a href="optionnolatch.htm">Next</a>
      </font>
    </td>
  </tr></table>
<hr><div align="left" ><font face="Arial"  color="#010101" ><span style="font-size:12pt" ><b>Syntax:</b></span></font><font color="#010101" ></font></div><p style="margin-left:13mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial"  color="#010101" ><span style="font-size:12pt" >#option NoContextSave</span></font><font color="#010101" ></font><br><br><br><font color="#010101" ></font><font face="Arial"  color="#010101" ><span style="font-size:12pt" ><b>Explanation:</b></span></font><font color="#010101" ></font><br><p style="margin-left:13mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial"  color="#010101" ><span style="font-size:12pt" >Interrupts can occur at almost any time, and may interrupt another 
command as it runs. To ensure that the interrupted command can 
continue properly after the interrupt, some temporary variables (the 
context) must be saved. Normally GCBASIC will do this automatically, 
but in some cases it may be necessary to prevent this. If porting some 
existing assembly code to GCBASIC, or creating a bootloader using 
GCBASIC that will call another program,&nbsp; NoContextSave can be used 
to prevent the context saving code from being added automatically.</span></font><font color="#010101" ></font><br><p style="margin-left:13mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial"  color="#010101" ><span style="font-size:12pt" >Be very careful using this option - it is very easy to cause random 
corruption of variables. If creating your own context saving code, you 
may need to save several variables. These are:</span></font><font color="#010101" ></font><br><p style="margin-left:25mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial"  color="#010101" ><span style="font-size:12pt" >For PIC 12F/16F: W, STATUS, PCLATH<br>
For PIC 12F1/16F1/18F: W, STATUS, PCLATH, PCLATU, BSR<br>
For AVR: All 32 registers</span></font><font color="#010101" ></font><br><p style="margin-left:13mm; margin-right:0mm; text-indent:0mm; " ><font color="#010101" ></font><br><p style="margin-left:13mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial"  color="#010101" ><span style="font-size:12pt" >Other variables may also need to be saved, depending on what 
commands are used inside the interrupt handler. Everything that is 
saved will also need to be restored manually when the interrupt 
handler finishes.</span></font><font color="#010101" ></font><br><br><br><font color="#010101" ></font><font face="Arial"  color="#010101" ><span style="font-size:12pt" ><b>Example:</b></span></font><font color="#010101" ></font><br><p style="margin-left:13mm; margin-right:0mm; text-indent:0mm; " ><font face="Courier New"  color="#010101" ><span style="font-size:10pt" >' This shows an example that could be used by a bootloader to 
call some application code.</span></font><font color="#010101" ></font><br><p style="margin-left:13mm; margin-right:0mm; text-indent:0mm; " ><font face="Courier New"  color="#010101" ><span style="font-size:10pt" >' The application code must deal with context save and restore<br>
' Suppose that application code starts at location 0x100, with 
interrupt vector at 0x108<br><br>
'Chip model<br>
#chip 18F2620<br><br>
'Do not save context automatically<br>
#option NoContextSave<br><br>
'Main bootloader routine<br>
Set PORTB.0 On<br>
'Do other stuff to make this an actual bootloader and not a 
trivial example<br>
'Transfer control to application code<br>
goto 0x100<br><br>
'Interrupt routine - this will be placed at the interrupt 
vector<br>
Sub Interrupt<br>
&nbsp;&nbsp;&nbsp; 'If any interrupt occurs, jump straight to application 
interrupt vector<br>
&nbsp;&nbsp;&nbsp; goto 0x108<br>
End Sub</span></font><font color="#010101" ></font><br><br><br><font color="#010101" ></font><font face="Arial"  color="#010101" ><span style="font-size:12pt" ><b>Note:</b></span></font><font color="#010101" ></font><br><p style="margin-left:13mm; margin-right:0mm; text-indent:0mm; " ><font face="Arial"  color="#010101" ><span style="font-size:12pt" >From version 0.941 GCbasic supports the #option NoContextSave.</span></font><font color="#010101" ></font><br><font color="#010101" ></font><br><div align="left" ><font color="#010101" ></font></div>

</html>
